/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> inorderTraversal(TreeNode* root) {
        vector<int> n;
        stack<struct TreeNode*> s;
        struct TreeNode* node;
        if(root==NULL)
            return n;
        s.push(root);
        while(s.size()){
            node = s.top();
            s.pop();
            if(node){
                s.push(node->right);
                s.push(node);
                s.push(node->left);
            }
            else{
                if(s.size()){
                    n.push_back(s.top()->val);
                    s.pop();
                }
            }
        }
        return n;
    }
};
