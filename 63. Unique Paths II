class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& arr) {
        int n=arr.size();
        int m=arr[0].size();
        int i,j;
        if(arr[n-1][m-1] || arr[0][0]) return 0;
        for(i=0;i<n;i++){
            if(arr[i][0]==1) break;
            arr[i][0]=-1;
        }
        while(i<n){
            arr[i][0]=1;
            i++;
        }
        for(i=0;i<m;i++){
            if(arr[0][i]==1) break;
            arr[0][i]=-1;
        }
        while(i<m){
            arr[0][i]=1;
            i++;
        }
        for(i=1;i<n;i++){
            for(j=1;j<m;j++){
                if(arr[i][j]!=1){
                    if(arr[i-1][j]==1 && arr[i][j-1]!=1){
                        arr[i][j]=arr[i][j-1];
                    }
                    else if(arr[i-1][j]!=1 && arr[i][j-1]==1){
                        arr[i][j]=arr[i-1][j];
                    }
                    else if(arr[i-1][j]!=1 && arr[i][j-1]!=1){
                        arr[i][j]=arr[i-1][j]+arr[i][j-1];
                    }
                }
            }
        }
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                cout<<arr[i][j]<<" ";
            }
            cout<<endl;
        }
        return abs(arr[n-1][m-1]);   
    }
};
