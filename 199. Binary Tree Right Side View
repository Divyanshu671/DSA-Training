/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        deque<TreeNode*> q;
        vector<int> ans;
        if(!root){
            return ans;
        }
        q.push_back(root);
        int c;
        while(q.size()){
            c=q.size();
            deque<TreeNode*> p;
            vector<int> t;
            while(c--){
                TreeNode * a = q.front();
                q.pop_front();
                t.push_back(a->val);
                if(a->left)
                    q.push_back(a->left);
                if(a->right)
                    q.push_back(a->right);
            }
            
            ans.push_back(t.back());
        }
        return ans;   
    }
};
