/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        deque<Node*> q;
        if(!root){
            return root;
        }
        q.push_back(root);
        int c;
        while(q.size()){
            c=q.size();
            while(c--){
                Node * a = q.front();
                q.pop_front();
                if(c>0){
                    a->next = q.front();
                }
                if(a->left)
                    q.push_back(a->left);
                if(a->right)
                    q.push_back(a->right);
            }
        }
        return root;
    }
};
