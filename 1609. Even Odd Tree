/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        queue<TreeNode*> q;
        TreeNode *t;
        q.push(root);
        int i=0,m,c,j,f;
        while(q.size()){
            f=i%2;
            if(f){
                m=9999999;
                c=q.size();
                while(c--){
                    t=q.front();
                    q.pop();
                    if(t->val%2==f){
                        return false;
                    }
                    if(m>t->val){
                        m=t->val;
                    }
                    else{
                        return false;
                    }
                    if(t->left)
                        q.push(t->left);
                    if(t->right)
                        q.push(t->right);
                }
            }
            else{
                m=0;
                c=q.size();
                while(c--){
                    t=q.front();
                    q.pop();
                    if(t->val%2==f){
                        return false;
                    }
                    if(m<t->val){
                        m=t->val;
                    }
                    else{
                        return false;
                    }
                    if(t->left)
                        q.push(t->left);
                    if(t->right)
                        q.push(t->right);
                }
            }
            i++;
        }
        return true;
    }
};
