/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        deque<TreeNode*> q;
        vector<vector<int>> ans;
        if(!root){
            return ans;
        }
        q.push_back(root);
        int c;
        int f=1;
        while(q.size()){
            c=q.size();
            vector<int> t;
            deque<TreeNode*> p;
            if(f){
                while(c--){
                    TreeNode * a = q.front();
                    q.pop_front();
                    t.push_back(a->val);
                    if(a->left)
                        p.push_back(a->left);
                    if(a->right)
                        p.push_back(a->right);
                }
                f=0;
            }
            else{
                while(c--){
                    TreeNode * a = q.back();
                    q.pop_back();
                    t.push_back(a->val);
                    if(a->right)
                        p.push_front(a->right);
                    if(a->left)
                        p.push_front(a->left);
                }
                f=1;
            }
            q=p;
            ans.push_back(t);
        }
        return ans;
    }
};
