/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        if(root==NULL)
            return NULL;
        queue<TreeNode*> q;
        TreeNode* t;
        q.push(root);
        while(q.size()>0){
            t = q.front();
            q.pop();
            if(t->val==val)
                return t;
            else if(t->val<val && t->right)
                q.push(t->right);
            else if(t->val>val && t->left)
                q.push(t->left);
        }
        return NULL;
    }
};
